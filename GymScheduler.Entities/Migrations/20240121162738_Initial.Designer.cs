// <auto-generated />
using System;
using System.Collections.Generic;
using GymScheduler.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymScheduler.Entities.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240121162738_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymScheduler.Entities.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.ComplexProperty<Dictionary<string, object>>("Fullname", "GymScheduler.Entities.Entities.Member.Fullname#Fullname", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GymScheduler.Entities.Entities.Training", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.ComplexProperty<Dictionary<string, object>>("Duration", "GymScheduler.Entities.Entities.Training.Duration#Duration", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("End", "GymScheduler.Entities.Entities.Training.Duration#Duration.End#End", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<DateTimeOffset>("Value")
                                        .HasColumnType("datetimeoffset");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Start", "GymScheduler.Entities.Entities.Training.Duration#Duration.Start#Start", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<DateTimeOffset>("Value")
                                        .HasColumnType("datetimeoffset");
                                });
                        });

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("GymScheduler.Entities.Entities.Training", b =>
                {
                    b.HasOne("GymScheduler.Entities.Entities.Member", null)
                        .WithMany("Trainings")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymScheduler.Entities.Entities.Member", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
